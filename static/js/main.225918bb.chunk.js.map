{"version":3,"sources":["utilities/formatters.js","components/results.js","components/feeInput.js","components/form.js","App.js","serviceWorker.js","index.js"],"names":["formatter","Intl","NumberFormat","style","currency","formatCurrency","amount","format","Results","formData","undefined","name","stampDuty","calculate","parseFloat","price","propertyTypes","RESIDENTIAL","countries","ENGLAND","buyerTypes","INVESTOR","tax","fees","acquisitionFees","map","object","Fee","push","sale","Sale","mortgageAmount","estimatedFinalValue","rate","loanCosts","mortgageFee","mortgage","Finance","insurance","Payment","rental","Rental","rentalIncome","lettingFee","property","Property","requiredMoney","calculateTotalCosts","refurbCost","refurbLoanCosts","totalOneOffCosts","moneyLeftIn","monthlyProfit","calculateMonthlyProfit","className","Math","abs","round","FeeInput","idx","fee","handleFeeChange","handleRemoveFee","nameId","amountId","key","renderLabel","value","onChange","type","placeholder","id","data-idx","data-name","required","step","onClick","disabled","renderRemoveButton","Form","props","state","getInitialFormState","handleAddFee","bind","handleInputChange","handleSubmit","this","setState","event","updatedFees","target","dataset","checked","splice","preventDefault","formHandler","onSubmit","React","Component","App","useState","setFormData","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.225918bb.chunk.js","sourcesContent":["const formatter = new Intl.NumberFormat('en-GB', {style: 'currency', currency: 'GBP'});\nconst formatCurrency = amount => {\n  return formatter.format(amount)\n};\n\nexport {\n  formatCurrency\n};\n","import React from 'react';\nimport {formatCurrency} from '../utilities/formatters';\nimport { buyerTypes, calculate, countries, propertyTypes } from \"uk-ireland-stampduty-calculator\";\nimport {Fee, Finance, Payment, Property, Rental, Sale} from '@votemike/property';\n\nconst Results = ({formData}) => {\n  if (formData.name === undefined) {\n    return null;\n  }\n  const stampDuty = calculate(parseFloat(formData.price), propertyTypes.RESIDENTIAL, countries.ENGLAND, buyerTypes.INVESTOR).tax;\n  const fees = formData.acquisitionFees.map((object) => {\n    return new Fee(parseFloat(object.amount));\n  });\n  fees.push(new Fee(parseFloat(stampDuty)));\n  const sale = new Sale(parseFloat(formData.price), fees);\n  const mortgageAmount = parseFloat(formData.estimatedFinalValue)*3/4;\n  const rate = (parseFloat(formData.loanCosts) * 12 * 100) / mortgageAmount;\n  const mortgageFee = new Fee(parseFloat(formData.mortgageFee));\n  const mortgage = new Finance(mortgageAmount, false, 0, rate, [mortgageFee]);\n  const insurance = new Payment(parseFloat(formData.insurance), 'monthly');\n  const rental = new Rental(parseFloat(formData.rentalIncome), parseFloat(formData.lettingFee));\n  const property = new Property(formData.name, [mortgage], [insurance], [rental]);\n  const requiredMoney = sale.calculateTotalCosts() + parseFloat(formData.refurbCost) + parseFloat(formData.refurbLoanCosts) + mortgage.totalOneOffCosts;\n  const moneyLeftIn = requiredMoney-mortgageAmount;\n  const monthlyProfit = property.calculateMonthlyProfit();\n\n  return (\n    <div className=\"box\">\n      <h2 className=\"title is-3\">Deal results</h2>\n      <div className=\"tile is-ancestor\">\n        <div className=\"tile is-vertical is-8\">\n          <div className=\"tile\">\n            <div className=\"tile is-parent is-vertical\">\n              <div className=\"tile is-child notification is-primary is-light\">\n                <p className='title'>Required Money</p>\n                <p className='subtitle'>{formatCurrency(requiredMoney)}</p>\n              </div>\n              <div className=\"tile is-child notification is-warning\">\n                <p className='title'>Final Value</p>\n                <p className='subtitle'>{formatCurrency(formData.estimatedFinalValue)}</p>\n              </div>\n            </div>\n            <div className=\"tile is-parent\">\n              <div className=\"tile is-child notification is-info\">\n                <p className='title'>Profit</p>\n                <p className='subtitle'>{formatCurrency(parseFloat(formData.estimatedFinalValue) - requiredMoney)}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"tile\">\n            <div className=\"tile is-parent\">\n              <div className=\"tile is-child notification is-danger\">\n                <p className='title'>Mortgage Amount</p>\n                <p className='subtitle'>{formatCurrency(mortgageAmount)}</p>\n              </div>\n            </div>\n            <div className=\"tile is-parent is-vertical\">\n              <div className=\"tile is-child notification is-info is-light\">\n                <p className='title'>{moneyLeftIn > 0 ? \"Money Left In Deal\" : \"Money Pulled Out\"}</p>\n                <p className='subtitle'>{formatCurrency(Math.abs(moneyLeftIn))}</p>\n              </div>\n              <div className=\"tile is-child notification is-primary\">\n                <p className='title'>Monthly Cashflow</p>\n                <p className='subtitle'>{formatCurrency(monthlyProfit)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"tile is-parent\">\n          <div className=\"tile is-child notification is-success\">\n            <p className=\"title\">Yearly ROI</p>\n            <p className=\"subtitle\">{moneyLeftIn > 0 ? Math.round(100*monthlyProfit*12/moneyLeftIn) : \"Infinite\"}%</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Results\n","import React from 'react';\n\nconst renderLabel = (idx) => {\n  if (idx > 0) {\n    return <div className=\"field-label\"></div>\n  }\n\n  return (\n    <div className=\"field-label is-normal\">\n      <label className=\"label\">Fees</label>\n    </div>\n  );\n};\n\nconst renderRemoveButton = (idx, handleRemoveFee) => {\n  if (idx > 0) {\n    return <input className=\"button is-danger\" type=\"button\" value=\"Remove\" data-idx={idx + 1}\n                  onClick={handleRemoveFee}/>\n  }\n\n  return <input className=\"button is-danger\" type=\"button\" value=\"Remove\" disabled=\"disabled\"/>\n};\n\nconst FeeInput = ({idx, fee, handleFeeChange, handleRemoveFee}) => {\n  const nameId = `acquisitionFee-name-${idx + 1}`;\n  const amountId = `acquisitionFee-amount-${idx + 1}`;\n  return (<div className=\"field is-horizontal\" key={`acquisitionFee-${idx + 1}`}>\n    {renderLabel(idx)}\n    <div className=\"field-body\">\n      <div className=\"field\">\n        <div className=\"control\">\n          <input className=\"input\" name={nameId} value={fee.name} onChange={handleFeeChange} type=\"text\"\n                 placeholder=\"X Fee\" id={nameId} data-idx={idx + 1} data-name=\"name\" required/>\n        </div>\n        <p className=\"help\">\n          Fee name\n        </p>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          <input className=\"input\" name={amountId} value={fee.amount} onChange={handleFeeChange} type=\"number\"\n                 step=\"any\" placeholder=\"0\" id={amountId} data-idx={idx + 1} data-name=\"amount\" required/>\n        </div>\n        <p className=\"help\">\n          Fee amount\n        </p>\n      </div>\n      <div className=\"field\">\n        <div className=\"control\">\n          {renderRemoveButton(idx, handleRemoveFee)}\n        </div>\n      </div>\n    </div>\n  </div>);\n};\n\nexport default FeeInput;\n","import React from 'react';\nimport FeeInput from \"./feeInput\";\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialFormState();\n    this.handleAddFee = this.handleAddFee.bind(this);\n    this.handleFeeChange = this.handleFeeChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleRemoveFee = this.handleRemoveFee.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getInitialFormState() {\n    const defaultAcquisitionFees = [\n      {name: 'Bank Transfer Fee', amount: ''},\n      {name: 'Broker Fee', amount: ''},\n      {name: 'Land Registry Fee', amount: ''},\n      {name: 'Solicitor Fee', amount: ''},\n      {name: 'Sourcing Fee', amount: ''},\n      {name: 'Survey Fee', amount: ''},\n    ];\n    return {name: '', price: '', acquisitionFees: defaultAcquisitionFees, refurbCost: '', refurbLoanCosts: '', estimatedFinalValue: '', loanCosts: '', mortgageFee: '', rentalIncome: '', lettingFee: '', insurance: ''};\n  }\n\n  handleAddFee() {\n    this.setState({'acquisitionFees': [...this.state.acquisitionFees, {name: '', amount: ''}]});\n  }\n\n  handleFeeChange(event) {\n    const updatedFees = [...this.state.acquisitionFees];\n    updatedFees[event.target.dataset.idx][event.target.dataset.name] = event.target.value;\n    this.setState({'acquisitionFees': updatedFees});\n  };\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  handleRemoveFee(event) {\n    const updatedFees = [...this.state.acquisitionFees];\n    updatedFees.splice(event.target.dataset.idx, 1);\n    this.setState({'acquisitionFees': updatedFees});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.formHandler(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <h2 className=\"title is-3\">Enter the deal info</h2>\n        <form onSubmit={this.handleSubmit}>\n          <h3 className=\"subtitle is-4\">Property Info</h3>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Property Name</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} placeholder=\"Downing Street\" required/>\n                </div>\n                <p className=\"help\">\n                  Give this property a label\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Price</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"price\" value={this.state.price} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"295000\" id=\"price\" required/>\n                </div>\n                <p className=\"help\">\n                  The price you will buy the property for\n                </p>\n              </div>\n            </div>\n          </div>\n          {this.state.acquisitionFees.map((fee, idx) => {\n            return <FeeInput idx={idx} fee={fee} handleFeeChange={this.handleFeeChange} handleRemoveFee={this.handleRemoveFee}/>\n          })}\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label\">\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input\n                    className=\"button\"\n                    type=\"button\"\n                    value=\"Add extra fee\"\n                    onClick={this.handleAddFee}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n          <h3 className=\"subtitle is-4\">Refurb Info</h3>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Refurb Cost</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"refurbCost\" value={this.state.refurbCost} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"17000\" id=\"refurbCost\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will need to be spent on the property\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Loan Costs</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"refurbLoanCosts\" value={this.state.refurbLoanCosts} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"1200\" id=\"refurbLoanCosts\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will the interest on any loans during the refurbishment cost?\n                </p>\n              </div>\n            </div>\n          </div>\n          <h3 className=\"subtitle is-4\">End Result Info</h3>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Estimated Final Value</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"estimatedFinalValue\" value={this.state.estimatedFinalValue} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"350000\" id=\"estimatedFinalValue\" required/>\n                </div>\n                <p className=\"help\">\n                  What is the estimated final value for the property after refurbishment?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Mortgage Cost</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"loanCosts\" value={this.state.loanCosts} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"250\" id=\"loanCosts\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will the mortgage payments cost each month?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Mortgage Fee</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"mortgageFee\" value={this.state.mortgageFee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"995\" id=\"mortgageFee\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will the mortgage arrangement fee be?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Rental Income</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"rentalIncome\" value={this.state.rentalIncome} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"750\" id=\"rentalIncome\" required/>\n                </div>\n                <p className=\"help\">\n                  What is the expected monthly rental income?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Letting Fee</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"lettingFee\" value={this.state.lettingFee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"9\" id=\"lettingFee\" required/>\n                </div>\n                <p className=\"help\">\n                  What percentage is the letting fee?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Insurance</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"insurance\" value={this.state.insurance} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"35\" id=\"insurance\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will any insurance cost each month?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label\"/>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary\">\n                    Generate\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form\n","import React, {useState} from 'react';\nimport './App.scss';\nimport Results from \"./components/results\";\nimport Form from \"./components/form\";\n\nfunction App() {\n  const [formData, setFormData] = useState({});\n\n  return (\n    <>\n      <section className=\"deal-generator section\">\n        <div className=\"container\">\n          <header>\n            <h1 className=\"title is-1\">Deal Generator</h1>\n          </header>\n          <Form formHandler={setFormData}/>\n          <Results formData={formData}/>\n          <div className=\"has-text-centered is-size-7\">Assumptions: The property is in England and follows normal stamp duty costs with the added 3% for second homes. The property has no ground-rent or maintenance charge. The property is a single property and will remain a single property. The purchase will be funded by a bridging loan and will be remortgaged once refurbishment is complete. The mortgage will be interest only with 75% LTV. No other loans will exist apart from the mortgage.</div>\n        </div>\n      </section>\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <p>Created by <a href=\"https://votemike.co.uk\">Michael Gwynne</a></p>\n          <p>You may also like <a href=\"https://votemike.github.io/amortisation-calculator/\">Amortisation Calculator</a> and <a href=\"https://votemike.github.io/stress-test/\">Property Stress Test</a></p>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}