{"version":3,"sources":["../node_modules/uk-ireland-stampduty-calculator/src/config.js","utilities/formatters.js","utilities/formDataMolder.js","../node_modules/uk-ireland-stampduty-calculator/index.js","../node_modules/uk-ireland-stampduty-calculator/src/calculator.js","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/@votemike/property/dist/src/fee.js","../node_modules/@votemike/property/dist/src/helpers.js","../node_modules/@votemike/property/dist/src/finance.js","../node_modules/@votemike/property/dist/src/payment.js","../node_modules/@votemike/property/dist/src/rental.js","../node_modules/@votemike/property/dist/src/property.js","../node_modules/@votemike/property/dist/src/sale.js","components/results.js"],"names":["load","percent","String","fromCharCode","countries","ENGLAND","SCOTLAND","WALES","IRELAND","propertyTypes","COMMERCIAL","RESIDENTIAL","buyerTypes","FIRST_TIME","MOVING_HOUSE","INVESTOR","ireland","upto","rate","scotland","sdltBands","thresholds","limit","englandFirstTimeLimit","config","comments","firstTimeWales","under40kUKInvestor","UKInvestor","firstTimeEnglandOverLimit","EMPTY","taxNames","long","short","module","exports","formatter","Intl","NumberFormat","style","currency","formatCurrency","amount","format","toMortgage","formData","mortgageFee","Fee","parseFloat","Finance","mortgageAmount","initialMortgageRate","toProperty","mortgage","payments","annualPayments","map","object","Payment","rental","Rental","rentalIncome","lettingFee","Property","name","toSale","stampDuty","calculate","price","tax","fees","acquisitionFees","push","Sale","require","propertyValue","propertyType","country","buyerType","bandLimit","bandAmount","previousBandLimit","taxName","isLoaded","below40kUKAdditionalProperty","comment","taxAdded","bands","onePercentOfVal","summaryBands","isFirst","isEnglandFirstOverLimit","RegExp","test","first","idx","length","adjustedRate","start","end","Math","floor","ok","obj","key","value","Object","defineProperty","enumerable","configurable","writable","this","json","fee","create","prototype","assign","round","Number","EPSILON","repayment","teaserRate","feeCosts","reduce","total","calculateYearlyCostOfFinance","calculateMonthlyCostOfFinance","monthlyInterestRate","monthsLeft","pow","calculateTotalCostOfFinance","_a","finance","feeObject","fromJson","interval","calculateMonthlyCost","calculateYearlyCost","payment","monthlyRent","finances","rentals","useTeaserRate","financeCosts","monthlyTeaserCostOfFinance","monthlyCostOfFinance","paymentCosts","monthlyCost","monthlyIncome","calculateMonthlyIncome","property","financeObject","paymentObject","rentalObject","Results","undefined","sale","requiredMoney","calculateTotalCosts","refurbCost","refurbLoanCosts","totalOneOffCosts","moneyLeftIn","monthlyProfit","calculateMonthlyProfit","className","estimatedFinalValue","abs","to"],"mappings":"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","file":"static/js/4.5855947e.chunk.js","sourcesContent":["const load = 3; // addtional UK property load\nconst percent = String.fromCharCode(37);\n\nconst countries = {\n  ENGLAND: 'england',\n  SCOTLAND: 'scotland',\n  WALES: 'wales',\n  IRELAND: 'ireland',\n};\n\nconst propertyTypes = {\n  COMMERCIAL: 'commercial',\n  RESIDENTIAL: 'residential',\n};\n\nconst buyerTypes = {\n  FIRST_TIME: 'first',\n  MOVING_HOUSE: 'home',\n  INVESTOR: 'investor',\n};\n\nconst ireland = [\n  { upto: 1000000, rate: 1 },\n  { upto: 'end', rate: 2 },\n];\n\nconst scotland = [{ upto: 250000, rate: 2, load },\n  { upto: 325000, rate: 5, load },\n  { upto: 750000, rate: 10, load },\n  { upto: 'end', rate: 12, load },\n];\n\nconst sdltBands = {\n  [propertyTypes.COMMERCIAL]: {\n    [countries.ENGLAND]: [\n      { upto: 150000, rate: 0 },\n      { upto: 250000, rate: 2 },\n      { upto: 'end', rate: 5 },\n    ],\n    [countries.WALES]: [\n      { upto: 150000, rate: 0 },\n      { upto: 250000, rate: 1 },\n      { upto: 1000000, rate: 5 },\n      { upto: 'end', rate: 6 },\n    ],\n    [countries.SCOTLAND]: [\n      { upto: 150000, rate: 0 },\n      { upto: 250000, rate: 1 },\n      { upto: 'end', rate: 5 },\n    ],\n    ireland,\n  },\n  [propertyTypes.RESIDENTIAL]: {\n    [buyerTypes.FIRST_TIME]: {\n      [countries.ENGLAND]: {\n        thresholds: [\n          { upto: 300000, rate: 0 },\n          { upto: 500000, rate: 5 },\n        ],\n        limit: 500000,\n      },\n      [countries.SCOTLAND]: {\n        thresholds: [\n          { upto: 175000, rate: 0 },\n          ...scotland,\n        ],\n        limit: -1,\n      },\n    },\n    [countries.ENGLAND]: [\n      { upto: 125000, rate: 0, load },\n      { upto: 250000, rate: 2, load },\n      { upto: 925000, rate: 5, load },\n      { upto: 1500000, rate: 10, load },\n      { upto: 'end', rate: 12, load },\n    ],\n    [countries.WALES]: [\n      { upto: 180000, rate: 0, load },\n      { upto: 250000, rate: 3.5, load },\n      { upto: 400000, rate: 5, load },\n      { upto: 750000, rate: 7.5, load },\n      { upto: 1500000, rate: 10, load },\n      { upto: 'end', rate: 12, load },\n    ],\n    [countries.SCOTLAND]: [\n      { upto: 145000, rate: 0, load },\n      ...scotland,\n    ],\n    ireland,\n  },\n};\n\nconst { limit: englandFirstTimeLimit } = sdltBands[propertyTypes.RESIDENTIAL][buyerTypes.FIRST_TIME][countries.ENGLAND];\n\nconst comments = {\n  firstTimeWales: 'there is no separate first time buyer exemption in Wales',\n  under40kUKInvestor: 'all transactions below 40k in UK are exempt from ',\n  UKInvestor: `${load + percent} surcharge is applied`,\n  firstTimeEnglandOverLimit: `properties over ${englandFirstTimeLimit} do not attract first time buyer relief`,\n  EMPTY: '',\n};\n\nconst taxNames = {\n  [countries.ENGLAND]: { long: 'stamp duty land tax', short: 'SDLT' },\n  [countries.IRELAND]: { long: 'stamp duty', short: 'stamp duty' },\n  [countries.SCOTLAND]: { long: 'land and buildings tax', short: 'LBTT' },\n  [countries.WALES]: { long: 'land transaction tax', short: 'LTT' },\n};\n\nconst config = {\n  sdltBands,\n  countries,\n  propertyTypes,\n  buyerTypes,\n  comments,\n  englandFirstTimeLimit,\n  taxNames,\n};\n\nmodule.exports = config;\n","const formatter = new Intl.NumberFormat('en-GB', {style: 'currency', currency: 'GBP'});\nconst formatCurrency = amount => {\n  return formatter.format(amount)\n};\n\nexport {\n  formatCurrency\n};\n","import {Fee, Finance, Payment, Property, Rental, Sale} from \"@votemike/property\";\nimport {buyerTypes, calculate, countries, propertyTypes} from \"uk-ireland-stampduty-calculator\";\n\nconst toMortgage = formData => {\n  const mortgageFee = new Fee(parseFloat(formData.mortgageFee));\n  return new Finance(parseFloat(formData.mortgageAmount), false, 0, parseFloat(formData.initialMortgageRate), [mortgageFee]);\n\n};\n\nconst toProperty = formData => {\n  const mortgage = toMortgage(formData);\n  const payments = formData.annualPayments.map((object) => {\n    return new Payment(parseFloat(object.amount), 'yearly');\n  });\n  const rental = new Rental(parseFloat(formData.rentalIncome), parseFloat(formData.lettingFee));\n\n  return new Property(formData.name, [mortgage], payments, [rental]);\n};\n\nconst toSale = formData => {\n  const stampDuty = calculate(parseFloat(formData.price), propertyTypes.RESIDENTIAL, countries.ENGLAND, buyerTypes.INVESTOR).tax;\n  const fees = formData.acquisitionFees.map((object) => {\n    return new Fee(parseFloat(object.amount));\n  });\n  fees.push(new Fee(stampDuty));\n\n  return new Sale(parseFloat(formData.price), fees);\n};\n\nexport {\n  toMortgage,\n  toProperty,\n  toSale\n};\n","const calculate = require('./src/calculator');\nconst { buyerTypes, countries, propertyTypes } = require('./src/config');\n\nmodule.exports = {\n  calculate,\n  buyerTypes,\n  countries,\n  propertyTypes\n};\n","/**\n * Calculator for residential and commercial\n *\n *  SDLT(England/NI),\n *  LBTT(Scotland),\n *  LTT(Wales),\n *  Stamp Duty(Ireland)\n *\n * correct for transactions completing after 1 April 2016\n * calculations are rounded down in line with\n *\n * https://www.tax.service.gov.uk/calculate-stamp-duty-land-tax\n *\n */\n\nconst {\n  sdltBands,\n  countries: { IRELAND, WALES, ENGLAND },\n  buyerTypes: { FIRST_TIME, INVESTOR },\n  propertyTypes: { RESIDENTIAL },\n  comments,\n  englandFirstTimeLimit,\n  taxNames,\n} = require('./config');\n\nconst ok = 'ok';\n\n/**\n * returns JSON object\n *\n * @param {number} propertyValue - int or floating point.\n * @param {string} propertyType - either propertyTypes.COMMERCIAL or propertyTypes.RESIDENTIAL.\n * @param {string} country - any of countries.ENGLAND, countries.WALES, countries.SCOTLAND, countries.IRELAND\n * @param {string} buyerType - any of buyerTypes.FIRST_TIME, buyerTypes.INVESTOR, buyerTypes.MOVING_HOUSE\n */\n\nconst calculate = (propertyValue, propertyType, country, buyerType) => {\n  const taxName = taxNames[country];\n  const isLoaded = country !== IRELAND\n    && buyerType === INVESTOR\n    && propertyType === RESIDENTIAL;\n  const below40kUKAdditionalProperty = isLoaded\n    && propertyValue <= 40000;\n\n  let comment = '';\n  let tax = 0;\n  let bandLimit;\n  let bandAmount;\n  let previousBandLimit;\n  let taxAdded = 0;\n  let bands = sdltBands[propertyType][country];\n  let endReached = false;\n\n  if (!below40kUKAdditionalProperty) {\n    const onePercentOfVal = (propertyValue / 100);\n    const summaryBands = [];\n\n    const isFirst = buyerType === FIRST_TIME\n      && propertyType === RESIDENTIAL;\n\n    const isWalesFirst = isFirst\n      && country === WALES;\n\n    const isEnglandFirstOverLimit = isFirst\n      && country === ENGLAND\n      && propertyValue > englandFirstTimeLimit;\n\n    if (isWalesFirst) {\n      comment = comments.firstTimeWales;\n    } else if (isLoaded) {\n      comment = comments.UKInvestor;\n    } else if (isEnglandFirstOverLimit) {\n      comment = comments.firstTimeEnglandOverLimit;\n    }\n\n    if (\n      buyerType === FIRST_TIME\n      && propertyType === RESIDENTIAL\n      && !(new RegExp(`${IRELAND}|${WALES}`)).test(country)\n    ) {\n      const { first } = sdltBands[propertyType];\n      const { limit, thresholds } = first[country];\n      if (limit === -1 || propertyValue <= limit) {\n        bands = thresholds;\n      }\n    }\n\n    for (let idx = 0; idx < bands.length; idx += 1) {\n      const {rate} = bands[idx];\n      const adjustedRate = rate + (buyerType === INVESTOR ? (bands[idx].load || 0) : 0);\n\n      bandLimit = bands[idx].upto;\n      previousBandLimit = idx > 0 ? bands[idx - 1].upto : 0;\n      bandAmount = propertyValue - previousBandLimit;\n      endReached = bandLimit === 'end' || propertyValue <= bandLimit;\n\n      if (endReached) {\n        if (bandLimit === 'end') { // end and return\n          taxAdded = ((onePercentOfVal - (previousBandLimit / 100)) * adjustedRate);\n          tax += taxAdded;\n          bandLimit = '+++';\n        } else if (propertyValue <= bandLimit) { // return before end\n          if (idx === 0) { // below first limit\n            taxAdded = (onePercentOfVal * adjustedRate);\n            tax += taxAdded;\n          } else { // below this limit\n            taxAdded = ((onePercentOfVal - (previousBandLimit / 100)) * adjustedRate);\n            tax += taxAdded;\n          }\n        }\n\n        summaryBands.push({\n          start: previousBandLimit,\n          end: propertyValue,\n          bandLimit,\n          bandAmount, adjustedRate,\n          taxAdded: Math.floor(taxAdded),\n        });\n\n        tax = Math.floor(tax);\n\n        return {\n          propertyValue,\n          propertyType,\n          country,\n          buyerType,\n          summaryBands,\n          tax,\n          ok,\n          comment,\n          taxName,\n        };\n      }\n      // add the tax rate for the whole band and carry on\n      bandAmount = bandLimit - previousBandLimit;\n      taxAdded = ((bandAmount) / 100 * adjustedRate);\n      summaryBands.push({\n        start: previousBandLimit,\n        end: bandLimit,\n        bandLimit,\n        bandAmount, adjustedRate, taxAdded\n      });\n      tax += taxAdded;\n    }\n  }\n\n  comment = comments.under40kUKInvestor + taxName.short;\n\n  return {\n    propertyValue,\n    propertyType,\n    country,\n    buyerType,\n    summaryBands: [{ start: 0,\n      end: propertyValue,\n      bandLimit: 40000,\n      bandAmount: 0,\n      adjustedRate: 0,\n      taxAdded: 0 }],\n    tax,\n    ok,\n    comment,\n    taxName,\n  };\n};\n\nmodule.exports = calculate;\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","export default class Fee {\n    constructor(amount) {\n        this.amount = amount;\n    }\n    static fromJson(json) {\n        const fee = Object.create(Fee.prototype);\n        return Object.assign(fee, json);\n    }\n}\n","const round = (amount) => {\n    return Math.round((amount + Number.EPSILON) * 100) / 100;\n};\nexport { round };\n","import { round } from './helpers';\nimport Fee from './fee';\nexport default class Finance {\n    constructor(amount, repayment, length, rate, fees, teaserRate) {\n        this.amount = amount;\n        this.repayment = repayment;\n        this.length = length;\n        this.rate = rate;\n        this.fees = fees;\n        this.teaserRate = teaserRate;\n    }\n    get totalCostOfFinance() {\n        return round(this.calculateTotalCostOfFinance());\n    }\n    get totalOneOffCosts() {\n        return this.fees.reduce((total, fee) => fee.amount + total, 0);\n    }\n    get monthlyCostOfFinance() {\n        return round(this.calculateMonthlyCostOfFinance(this.rate));\n    }\n    get monthlyTeaserCostOfFinance() {\n        var _a;\n        return round(this.calculateMonthlyCostOfFinance((_a = this.teaserRate) !== null && _a !== void 0 ? _a : this.rate));\n    }\n    get yearlyCostOfFinance() {\n        return round(this.calculateYearlyCostOfFinance(this.rate));\n    }\n    get yearlyTeaserOfFinance() {\n        var _a;\n        return round(this.calculateYearlyCostOfFinance((_a = this.teaserRate) !== null && _a !== void 0 ? _a : this.rate));\n    }\n    calculateTotalCostOfFinance() {\n        const feeCosts = this.fees.reduce((total, fee) => fee.amount + total, 0);\n        if (this.repayment) {\n            return this.calculateYearlyCostOfFinance(this.rate) * this.length + feeCosts;\n        }\n        return this.amount + this.calculateYearlyCostOfFinance(this.rate) * this.length + feeCosts;\n    }\n    calculateYearlyCostOfFinance(rate) {\n        return this.calculateMonthlyCostOfFinance(rate) * 12;\n    }\n    calculateMonthlyCostOfFinance(rate) {\n        const monthlyInterestRate = rate / 12 / 100;\n        if (!this.repayment) {\n            return this.amount * monthlyInterestRate;\n        }\n        const monthsLeft = this.length * 12;\n        // M = P [ i(1 + i)^n ] / [ (1 + i)^n – 1]\n        const pow = Math.pow((monthlyInterestRate + 1), monthsLeft);\n        return this.amount * ((monthlyInterestRate * pow) / (pow - 1));\n    }\n    static fromJson(json) {\n        const finance = Object.create(Finance.prototype);\n        return Object.assign(finance, json, {\n            fees: json.fees.map((feeObject) => {\n                return Fee.fromJson(feeObject);\n            })\n        });\n    }\n}\n","import { round } from './helpers';\nexport default class Payment {\n    constructor(amount, interval) {\n        this.amount = amount;\n        this.interval = interval;\n    }\n    get monthlyCost() {\n        return round(this.calculateMonthlyCost());\n    }\n    get yearlyCost() {\n        return round(this.calculateYearlyCost());\n    }\n    calculateYearlyCost() {\n        if (this.interval === 'yearly') {\n            return this.amount;\n        }\n        return this.amount * 12;\n    }\n    calculateMonthlyCost() {\n        if (this.interval === 'monthly') {\n            return this.amount;\n        }\n        return this.amount / 12;\n    }\n    static fromJson(json) {\n        const payment = Object.create(Payment.prototype);\n        return Object.assign(payment, json);\n    }\n}\n","import { round } from './helpers';\nexport default class Rental {\n    constructor(monthlyRent, lettingFee) {\n        this.monthlyRent = monthlyRent;\n        this.lettingFee = lettingFee;\n    }\n    get monthlyIncome() {\n        return round(this.monthlyRent - (this.monthlyRent * this.lettingFee / 100));\n    }\n    static fromJson(json) {\n        const rental = Object.create(Rental.prototype);\n        return Object.assign(rental, json);\n    }\n}\n","import Finance from './finance';\nimport Payment from './payment';\nimport Rental from './rental';\nexport default class Property {\n    constructor(name, finances, payments, rentals) {\n        this.name = name;\n        this.finances = finances;\n        this.payments = payments;\n        this.rentals = rentals;\n    }\n    calculateMonthlyCost(useTeaserRate = false) {\n        const financeCosts = this.finances.reduce((total, finance) => (useTeaserRate ? finance.monthlyTeaserCostOfFinance : finance.monthlyCostOfFinance) + total, 0);\n        const paymentCosts = this.payments.reduce((total, payment) => payment.monthlyCost + total, 0);\n        return financeCosts + paymentCosts;\n    }\n    calculateMonthlyIncome() {\n        return this.rentals.reduce((total, rental) => rental.monthlyIncome + total, 0);\n    }\n    calculateMonthlyProfit(useTeaserRate = false) {\n        return this.calculateMonthlyIncome() - this.calculateMonthlyCost(useTeaserRate);\n    }\n    static fromJson(json) {\n        const property = Object.create(Property.prototype);\n        return Object.assign(property, json, {\n            finances: json.finances.map((financeObject) => {\n                return Finance.fromJson(financeObject);\n            }),\n            payments: json.payments.map((paymentObject) => {\n                return Payment.fromJson(paymentObject);\n            }),\n            rentals: json.rentals.map((rentalObject) => {\n                return Rental.fromJson(rentalObject);\n            })\n        });\n    }\n    static reviver(key, value) {\n        return key === \"\" ? Property.fromJson(value) : value;\n    }\n}\n","export default class Sale {\n    constructor(amount, fees) {\n        this.amount = amount;\n        this.fees = fees;\n    }\n    calculateTotalCosts() {\n        const feeCosts = this.fees.reduce((total, fee) => fee.amount + total, 0);\n        return this.amount + feeCosts;\n    }\n}\n","import React from 'react';\nimport {formatCurrency} from '../utilities/formatters';\nimport {toMortgage, toProperty, toSale} from '../utilities/formDataMolder';\nimport {Link} from \"react-router-dom\";\n\nconst Results = ({formData}) => {\n  if (formData.name === undefined) {\n    return null;\n  }\n\n  const sale = toSale(formData);\n  const mortgage = toMortgage(formData);\n  const property = toProperty(formData);\n  const requiredMoney = sale.calculateTotalCosts() + parseFloat(formData.refurbCost) + parseFloat(formData.refurbLoanCosts) + mortgage.totalOneOffCosts;\n  const mortgageAmount = parseFloat(formData.mortgageAmount);\n  const moneyLeftIn = requiredMoney-mortgageAmount;\n  const monthlyProfit = property.calculateMonthlyProfit();\n\n  return (\n    <div className=\"box\">\n      <h2 className=\"title is-3\">Deal results</h2>\n      <div className=\"tile is-ancestor\">\n        <div className=\"tile is-vertical is-8\">\n          <div className=\"tile\">\n            <div className=\"tile is-parent is-vertical\">\n              <div className=\"tile is-child notification is-primary is-light\">\n                <p className='title'>Required Money</p>\n                <p className='subtitle'>{formatCurrency(requiredMoney)}</p>\n              </div>\n              <div className=\"tile is-child notification is-warning\">\n                <p className='title'>Final Value</p>\n                <p className='subtitle'>{formatCurrency(formData.estimatedFinalValue)}</p>\n              </div>\n            </div>\n            <div className=\"tile is-parent\">\n              <div className=\"tile is-child notification is-info\">\n                <p className='title'>Profit</p>\n                <p className='subtitle'>{formatCurrency(parseFloat(formData.estimatedFinalValue) - requiredMoney)}</p>\n              </div>\n            </div>\n          </div>\n          <div className=\"tile\">\n            <div className=\"tile is-parent\">\n              <div className=\"tile is-child notification is-danger\">\n                <p className='title'>Mortgage Amount</p>\n                <p className='subtitle'>{formatCurrency(mortgageAmount)}</p>\n              </div>\n            </div>\n            <div className=\"tile is-parent is-vertical\">\n              <div className=\"tile is-child notification is-info is-light\">\n                <p className='title'>{moneyLeftIn > 0 ? \"Money Left In Deal\" : \"Money Pulled Out\"}</p>\n                <p className='subtitle'>{formatCurrency(Math.abs(moneyLeftIn))}</p>\n              </div>\n              <div className=\"tile is-child notification is-primary\">\n                <p className='title'>Monthly Cashflow</p>\n                <p className='subtitle'>{formatCurrency(monthlyProfit)}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"tile is-parent\">\n          <div className=\"tile is-child notification is-success\">\n            <p className=\"title\">Yearly ROI</p>\n            <p className=\"subtitle\">{moneyLeftIn > 0 ? Math.round(100*monthlyProfit*12/moneyLeftIn) : \"Infinite\"}%</p>\n          </div>\n        </div>\n      </div>\n      <Link to=\"/investor-pack\" className=\"button is-primary\">Generate Investor Pack</Link>\n    </div>\n  );\n};\n\nexport default Results\n"],"sourceRoot":""}