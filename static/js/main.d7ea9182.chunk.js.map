{"version":3,"sources":["utilities/formatters.js","components/results.js","components/form.js","App.js","serviceWorker.js","index.js"],"names":["formatter","Intl","NumberFormat","style","currency","formatCurrency","amount","format","Results","formData","undefined","name","stampDuty","calculate","parseFloat","price","propertyTypes","RESIDENTIAL","countries","ENGLAND","buyerTypes","INVESTOR","tax","feesTotal","solicitorFee","surveyFee","landRegistryFee","mortgageFee","requiredMoney","refurbCost","refurbLoanCosts","mortgageAmount","estimatedFinalValue","moneyLeftIn","monthlyProfit","rentalIncome","lettingFee","loanCosts","insurance","className","id","Math","round","onClick","element","document","getElementById","domToPdf","Form","props","state","getInitialFormState","handleInputChange","bind","handleSubmit","event","target","value","type","checked","this","setState","preventDefault","formHandler","onSubmit","onChange","placeholder","required","step","React","Component","App","useState","setFormData","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d7ea9182.chunk.js","sourcesContent":["const formatter = new Intl.NumberFormat('en-GB', {style: 'currency', currency: 'GBP'});\nconst formatCurrency = amount => {\n  return formatter.format(amount)\n};\n\nexport {\n  formatCurrency\n};\n","import React from 'react';\nimport {formatCurrency} from '../utilities/formatters';\nimport { buyerTypes, calculate, countries, propertyTypes } from \"uk-ireland-stampduty-calculator\";\nimport domToPdf from \"dom-to-pdf\";\n\nconst Results = ({formData}) => {\n  if (formData.name === undefined) {\n    return null;\n  }\n  const printPDF = () => {\n    const element = document.getElementById('pdf-container');\n    domToPdf(element, {});\n  };\n  const stampDuty = calculate(parseFloat(formData.price), propertyTypes.RESIDENTIAL, countries.ENGLAND, buyerTypes.INVESTOR).tax;\n  const feesTotal = parseFloat(formData.solicitorFee) + parseFloat(formData.surveyFee) + parseFloat(formData.landRegistryFee) + parseFloat(formData.mortgageFee) + parseFloat(stampDuty);\n  const requiredMoney = parseFloat(formData.price) + feesTotal + parseFloat(formData.refurbCost) + parseFloat(formData.refurbLoanCosts);\n  const mortgageAmount = parseFloat(formData.estimatedFinalValue)*3/4;\n  const moneyLeftIn = requiredMoney-mortgageAmount;\n  const monthlyProfit = (parseFloat(formData.rentalIncome)*(1-(parseFloat(formData.lettingFee)/100))) - parseFloat(formData.loanCosts) - parseFloat(formData.insurance);\n  return (\n    <div className=\"box\">\n      <h2 className=\"title is-3\">Deal results</h2>\n      <div id=\"pdf-container\" className='section'>\n        <div className='tile is-ancestor'>\n          <div className='tile is-vertical is-parent is-size-5 is-8'>\n            <div className='tile is-vertical'>\n              <h2 className='title'>{formData.name}</h2>\n              <p>{formData.name} is a property that should be able to generate {Math.round(100*monthlyProfit*12/moneyLeftIn)}% yearly return on an amount of {formatCurrency(moneyLeftIn)} left in the deal.</p>\n              <p>With a price of {formatCurrency(parseFloat(formData.price))}, fees of {formatCurrency(feesTotal)} and refurbishment costs of {formatCurrency(parseFloat(formData.refurbCost) + parseFloat(formData.refurbLoanCosts))}, the total amount of money required is {formatCurrency(requiredMoney)}. The property has an estimated refurbished value of {formatCurrency(formData.estimatedFinalValue)}.</p>\n              <p>A 75% LTV mortgage of {formatCurrency(mortgageAmount)} would mean {formatCurrency(moneyLeftIn)} is left in the deal.</p>\n              <p>Monthly profit after fees and costs should be {formatCurrency(monthlyProfit)}; leading to a yearly ROI of {Math.round(100*monthlyProfit*12/moneyLeftIn)}%.</p>\n            </div>\n          </div>\n          <div className='tile is-parent is-vertical'>\n            <div className=\"tile is-child notification is-primary is-light\">\n              <h2 className='title'>Required Money</h2>\n              <p className='subtitle'>{formatCurrency(requiredMoney)}</p>\n            </div>\n            <div className=\"tile is-child notification is-warning\">\n              <h2 className='title'>Final Value</h2>\n              <p className='subtitle'>{formatCurrency(formData.estimatedFinalValue)}</p>\n            </div>\n            <div className=\"tile is-child notification is-info\">\n              <h2 className='title'>Profit</h2>\n              <p className='subtitle'>{formatCurrency(parseFloat(formData.estimatedFinalValue) - requiredMoney)}</p>\n            </div>\n            <div className=\"tile is-child notification is-danger\">\n              <h2 className='title'>Mortgage Amount</h2>\n              <p className='subtitle'>{formatCurrency(mortgageAmount)}</p>\n            </div>\n            <div className=\"tile is-child notification is-info is-light\">\n              <h2 className='title'>Money Left In Deal</h2>\n              <p className='subtitle'>{formatCurrency(moneyLeftIn)}</p>\n            </div>\n            <div className=\"tile is-child notification is-primary\">\n              <h2 className='title'>Monthly Profit</h2>\n              <p className='subtitle'>{formatCurrency(monthlyProfit)}</p>\n            </div>\n            <div className=\"tile is-child notification is-success\">\n              <h2 className=\"title\">Yearly Yield</h2>\n              <p className=\"subtitle\">{Math.round(100*monthlyProfit*12/moneyLeftIn)}%</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <button onClick={printPDF} className=\"button is-primary\">\n        Download PDF\n      </button>\n    </div>\n  );\n};\n\nexport default Results\n","import React from 'react';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getInitialFormState();\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  getInitialFormState() {\n    return {name: '', price: '', solicitorFee: '', surveyFee: '', landRegistryFee: '', refurbCost: '', refurbLoanCosts: '', estimatedFinalValue: '', loanCosts: '', mortgageFee: '', rentalIncome: '', lettingFee: '', insurance: ''};\n  }\n\n  handleInputChange(event) {\n    const target = event.target;\n    const value = target.type === 'checkbox' ? target.checked : target.value;\n    const name = target.name;\n\n    this.setState({[name]: value});\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.formHandler(this.state);\n  }\n\n  render() {\n    return (\n      <div className=\"box\">\n        <h2 className=\"title is-3\">Enter the deal info</h2>\n        <form onSubmit={this.handleSubmit}>\n          <h3 className=\"subtitle is-4\">Property Info</h3>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Property Name</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"name\" value={this.state.name} onChange={this.handleInputChange} placeholder=\"Downing Street\" required/>\n                </div>\n                <p className=\"help\">\n                  Give this property a label\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Price</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"price\" value={this.state.price} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"295000\" id=\"price\" required/>\n                </div>\n                <p className=\"help\">\n                  The price you will buy the property for\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Fees</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"solicitorFee\" value={this.state.solicitorFee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"1495\" id=\"solicitorFee\" required/>\n                </div>\n                <p className=\"help\">\n                  Solicitor Fee\n                </p>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"surveyFee\" value={this.state.surveyFee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"395\" id=\"surveyFee\" required/>\n                </div>\n                <p className=\"help\">\n                  Survey Fee\n                </p>\n              </div>\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"landRegistryFee\" value={this.state.landRegistryFee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"200\" id=\"landRegistryFee\" required/>\n                </div>\n                <p className=\"help\">\n                  Land Registry\n                </p>\n              </div>\n            </div>\n          </div>\n          <h3 className=\"subtitle is-4\">Refurb Info</h3>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Refurb Cost</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"refurbCost\" value={this.state.refurbCost} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"17000\" id=\"refurbCost\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will need to be spent on the property\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Loan Costs</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"refurbLoanCosts\" value={this.state.refurbLoanCosts} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"1200\" id=\"refurbLoanCosts\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will the interest on any loans during the refurbishment cost?\n                </p>\n              </div>\n            </div>\n          </div>\n          <h3 className=\"subtitle is-4\">End Result Info</h3>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Estimated Final Value</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"estimatedFinalValue\" value={this.state.estimatedFinalValue} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"350000\" id=\"estimatedFinalValue\" required/>\n                </div>\n                <p className=\"help\">\n                  What is the estimated final value for the property after refurbishment?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Mortgage Cost</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"loanCosts\" value={this.state.loanCosts} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"250\" id=\"loanCosts\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will the mortgage payments cost each month?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Mortgage Fee</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"mortgageFee\" value={this.state.mortgageFee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"995\" id=\"mortgageFee\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will the mortgage arrangement fee be?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Rental Income</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"rentalIncome\" value={this.state.rentalIncome} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"750\" id=\"rentalIncome\" required/>\n                </div>\n                <p className=\"help\">\n                  What is the expected monthly rental income?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Letting Fee</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"lettingFee\" value={this.state.lettingFee} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"9\" id=\"lettingFee\" required/>\n                </div>\n                <p className=\"help\">\n                  What percentage is the letting fee?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label is-normal\">\n              <label className=\"label\">Insurance</label>\n            </div>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <input className=\"input\" name=\"insurance\" value={this.state.insurance} onChange={this.handleInputChange} type=\"number\" step=\"any\" placeholder=\"35\" id=\"insurance\" required/>\n                </div>\n                <p className=\"help\">\n                  How much will any insurance cost each month?\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"field is-horizontal\">\n            <div className=\"field-label\"/>\n            <div className=\"field-body\">\n              <div className=\"field\">\n                <div className=\"control\">\n                  <button type=\"submit\" className=\"button is-primary\">\n                    Generate\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Form\n","import React, {useState} from 'react';\nimport './App.scss';\nimport Results from \"./components/results\";\nimport Form from \"./components/form\";\n\nfunction App() {\n  const [formData, setFormData] = useState({});\n\n  return (\n    <>\n      <section className=\"deal-generator section\">\n        <div className=\"container\">\n          <header>\n            <h1 className=\"title is-1\">Deal Generator</h1>\n          </header>\n          <Form formHandler={setFormData}/>\n          <Results formData={formData}/>\n          <div className=\"has-text-centered is-size-7\">Assumptions: The property is in England and follows normal stamp duty costs with the added 3% for second homes. The property has no ground-rent or maintenance charge. The property is a single property and will remain a single property. The purchase will be funded by a bridging loan and will be remortgaged once refurbishment is complete. The mortgage will be interest only with 75% LTV. No other loans will exist apart from the mortgage.</div>\n        </div>\n      </section>\n      <footer className=\"footer\">\n        <div className=\"content has-text-centered\">\n          <p>Created by <a href=\"https://votemike.co.uk\">Michael Gwynne</a></p>\n          <p>You may also like <a href=\"https://votemike.github.io/amortisation-calculator/\">Amortisation Calculator</a> and <a href=\"https://votemike.github.io/stress-test/\">Property Stress Test</a></p>\n        </div>\n      </footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}